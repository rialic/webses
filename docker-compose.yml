version: "3.9"

networks:
  app:
  nginx:
  db:
  redis:

services:
  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: dockerfile
    image: nginx
    container_name: nginx
    volumes:
      - ./:/var/www:ro
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    deploy:
      resources:
        limits:
          cpus: '0.90'
          memory: 700M
    depends_on:
      - app
    networks:
      - nginx

  app:
    build:
      context: ./.docker/php-fpm
      dockerfile: dockerfile
    image: app
    container_name: app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - app
      - nginx
      - db
      - redis

  db:
    image: linuxserver/mariadb:latest
    container_name: db
    volumes:
      - ./.docker/mariadb/:/config
    ports:
      - 3306:3306
    environment:
      TZ: 'America/Sao_Paulo'
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    networks:
      - db

  redis:
    image: redis:7.2.1-alpine3.18
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - redis

  #CONTAINER SERVICES

  node:
    image: node:current-alpine3.16
    container_name: node
    working_dir: /var/www
    volumes:
      - ./:/var/www

  composer:
    build:
      context: ./.docker/composer
      dockerfile: dockerfile
    image: composer
    container_name: composer
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["composer"]
    networks:
      - app

  artisan:
    build:
      context: ./.docker/php-fpm
      dockerfile: dockerfile
    image: artisan
    container_name: artisan
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["php", "artisan"]
    depends_on:
      - db
    networks:
      - app
      - db
      - redis

  phpunit:
    build:
      context: ./.docker/php-fpm
      dockerfile: dockerfile
    image: phpunit
    container_name: phpunit
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["/var/www/vendor/bin/phpunit"]
    depends_on:
      - db
    networks:
      - app
      - db

  ###################################################################################
  # Available queues                                                                #
  # - php artisan queue:work --queue=verify-email                                   #
  ###################################################################################

  # queue:
  #   build:
  #     context: ./.docker/php-fpm
  #     dockerfile: Dockerfile
  #   image: queue
  #   container_name: queue
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #   entrypoint: ["php", "artisan", "queue:work", "--queue=verify-email"]
  #   networks:
  #     - app
  #     - nginx
  #     - db
  #     - redis

  # scheduler:
  #   build:
  #     context: ./.docker/php-fpm
  #     dockerfile: Dockerfile
  #   image: scheduler
  #   container_name: scheduler
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #   entrypoint: ["php", "artisan", "schedule:work"]
  #   networks:
  #     - app
  #     - nginx
  #     - db